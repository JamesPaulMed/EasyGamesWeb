@model IEnumerable<Order>

@{
    ViewData["Title"] = "My Orders";
}

<div class="mt-2" style="width:100%">

    <h4>My Orders</h4>

    @if (Model != null && Model.Any())
    {
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>OrderDate</th>
                    <th>OrderStatus</th>
                </tr>
            </thead>

            <tbody>
                @foreach (var order in Model)
                {
                    // Use UnitPrice saved on the order so historical totals are correct (OrderDetails.UnitPrice is double)
                    decimal orderTotal = order?.OrderDetail?.Sum(od => (decimal)od.UnitPrice * od.Quantity) ?? 0m;

                    <tr>
                        <td>@order.CreateDate.ToString("dd-MM-yyyy")</td>
                        <td>@order.OrderStat?.StatName</td>
                    </tr>

                    <tr>
                        <td><strong>TOTAL:</strong></td>
                        <td>@orderTotal.ToString("C")</td>
                    </tr>

                    @if (order.OrderDetail != null && order.OrderDetail.Count > 0)
                    {
                        <tr>
                            <td colspan="2" class="p-0">
                                <table class="table table-striped mb-0">
                                    <thead>
                                        <tr>
                                            <th>Product</th>
                                            <th>Image</th>
                                            <th class="text-end">Unit Price (x Qty)</th>
                                            <th class="text-end">Line Total</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in order.OrderDetail)
                                        {
                                            var prod = item.Product; // singular nav prop
                                            var fileName = prod?.Image;
                                            var imgUrl = string.IsNullOrWhiteSpace(fileName)
                                            ? Url.Content("~/img/noimage.jpg")
                                            : Url.Content($"~/uploads/{fileName}");

                                            decimal unit = (decimal)item.UnitPrice;
                                            decimal lineTotal = unit * item.Quantity;

                                            <tr>
                                                <td>@(prod?.ProductName ?? "Unknown")</td>
                                                <td>
                                                    <img src="@imgUrl"
                                                         alt="@(prod?.ProductName ?? "Product image")"
                                                         style="width:80px;height:100px;object-fit:cover;" />
                                                </td>
                                                <td class="text-end">
                                                    @unit.ToString("C") X @item.Quantity
                                                </td>
                                                <td class="text-end">
                                                    @lineTotal.ToString("C")
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>

        <a href="/Identity/Account/Manage" class="btn btn-dark m-2">Back</a>
    }
    else
    {
        <h5>No Orders</h5>
    }
</div>
