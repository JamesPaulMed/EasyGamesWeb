@model IEnumerable<EasyGamesWeb.Models.ShopInventory>
@{
    var shopId = (int)ViewBag.ShopId;
    string shopName = ViewBag.ShopName as string ?? $"Shop #{shopId}";
    ViewData["Title"] = $"Stock – {shopName}";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h3 class="mb-0">@shopName – Stock</h3>
    <a class="btn btn-outline-secondary" asp-controller="AdminShops" asp-action="Index">Back to Shops</a>
</div>

@if (TempData["Msg"] is string msg)
{
    <div class="alert alert-success">@msg</div>
}
@if (TempData["Err"] is string err)
{
    <div class="alert alert-danger">@err</div>
}

<div class="card mb-4">
    <div class="card-header">
        <strong>Add / Receive Stock</strong>
    </div>
    <div class="card-body">
        <form asp-action="Add" method="post" class="row gy-2 gx-3 align-items-end">
            <input type="hidden" name="shopId" value="@shopId" />
            <div class="col-md-6">
                <label class="form-label">Product</label>
                <select name="productId" class="form-select" asp-items="@(ViewBag.Products)">
                    <option value="">-- select product --</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">Quantity</label>
                <input type="number" name="qty" class="form-control" min="1" value="1" />
            </div>
            <div class="col-md-3">
                <label class="form-label">Price override (optional)</label>
                <input type="number" name="priceOverride" class="form-control" step="0.01" />
            </div>
            <div class="col-md-1 d-grid">
                <button type="submit" class="btn btn-primary">Add</button>
            </div>
        </form>
    </div>
</div>

<table class="table table-striped align-middle">
    <thead>
        <tr>
            <th>Product</th>
            <th class="text-end">Unit Price</th>
            <th class="text-end">Unit Cost</th>
            <th class="text-end">Qty</th>
            <th class="text-nowrap">Updated</th>
            <th style="width: 220px;"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var i in Model)
        {
            var low = i.Quantity <= 3;
            var zeroOrBelow = i.Quantity <= 0;

            <tr>
                <td>@i.Product.ProductName</td>
                <td class="text-end">@i.UnitPrice.ToString("C")</td>
                <td class="text-end">@i.UnitCost.ToString("C")</td>
                <td class="text-end">
                    @i.Quantity
                    @if (zeroOrBelow)
                    {
                        <span class="badge bg-danger ms-2">At/Below 0</span>
                    }
                    else if (low)
                    {
                        <span class="badge bg-warning text-dark ms-2">Low</span>
                    }
                </td>
                <td class="text-nowrap">@i.LastUpdatedUtc.ToLocalTime().ToString("dd-MMM-yyyy HH:mm")</td>
                <td>
                    <form class="row g-2 justify-content-end" asp-action="ChangePrice" method="post">
                        <input type="hidden" name="shopInventoryId" value="@i.Id" />
                        <input type="hidden" name="shopId" value="@shopId" />
                        <div class="col">
                            <input type="number" step="0.01" name="newPrice" class="form-control form-control-sm" placeholder="New price" />
                        </div>
                        <div class="col-auto">
                            <button type="submit" class="btn btn-sm btn-outline-primary">Update Price</button>
                        </div>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>
